generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- МОДЕЛЬ ПОЛЬЗОВАТЕЛЯ ---
model User {
  id        String    @id @default(cuid())
  email     String    @unique
  emailVerified   DateTime? 
  password  String
  name      String   @unique 
  avatarUrl String? // Ссылка на аватар, необязательная
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  

  vercelApiToken String?

  githubId         Int?     @unique // ID пользователя на GitHub, уникальный
  githubUsername   String?  // Логин на GitHub
  githubAccessToken String?  // Зашифрованный токен доступа

  // Добавляем связь: у этого пользователя есть список проектов
  projects  Project[]

  tags      Tag[]     // У пользователя может быть много тегов
}

// --- МОДЕЛЬ ПРОЕКТА ---
model Project {
  id          String   @id @default(cuid())
  name        String   // Название проекта, например, "My Awesome Website"
  gitUrl      String   @unique // Ссылка на Git-репозиторий, должна быть уникальной
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Новое, необязательное поле для ID проекта из Vercel
  vercelProjectId String?  @unique

  // Добавляем связь: этот проект принадлежит одному пользователю
  userId      String   // "Внешний ключ" для связи с User
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

   // СВЯЗЬ С ТЕГАМИ
  tags Tag[]
}

// МОДЕЛЬ ДЛЯ ТЕГОВ
model Tag {
  id        String    @id @default(cuid())
  name      String    @unique // e.g., "React", "Node.js", "Python"
  color     String    // e.g., "#61DAFB", "#68A063", "#3776AB"
  
  projects Project[]
  
  // Привязка к пользователю, чтобы у каждого были свои теги
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}